#!/bin/bash
# This function recursively kills a process and all its children.
kill_tree() {
  local _pid=$1
  # Get direct children of the _pid.
  for child in $(pgrep -P $_pid); do
    kill_tree "$child"
  done
  echo "Killing process with PID $_pid"
  kill "$_pid" 2>/dev/null
}

# Kill the npm run dev process tree.
if [ -f RUNNING/frontend_dev.pid ]; then
  pid_frontend=$(cat RUNNING/frontend_dev.pid)
  if kill -0 "$pid_frontend" 2>/dev/null; then
    echo "Killing npm run dev process tree with root PID $pid_frontend"
    kill_tree "$pid_frontend"
    # Give a moment for processes to exit gracefully, then force kill if necessary.
    sleep 1
    kill -9 "$pid_frontend" 2>/dev/null
  else
    echo "Process for npm run dev with PID $pid_frontend is not running."
  fi
fi

# Kill the npm start process tree.
if [ -f RUNNING/start.pid ]; then
  pid_start=$(cat RUNNING/start.pid)
  if kill -0 "$pid_start" 2>/dev/null; then
    echo "Killing npm start process tree with root PID $pid_start"
    kill_tree "$pid_start"
    sleep 1
    kill -9 "$pid_start" 2>/dev/null
  else
    echo "Process for npm start with PID $pid_start is not running."
  fi
fi

# Delete the RUNNING folder after killing the processes.
if [ -d RUNNING ]; then
  rm -r RUNNING
  echo "Deleted the RUNNING folder."
fi

